[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "llmgateway"
description = "LLMGateway Python SDK Client"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [
    { name = "Yasser Tahiri", email = "hello@yezz.me" },
]
keywords = [
    "LLM",
    "LLMGateway",
    "LLMGateway API",
    "LLMGateway SDK",
    "LLMGateway Python SDK",
    "LLMGateway Python Client",
    "LLMGateway Python SDK Client",
]

classifiers = [
    "License :: OSI Approved :: MIT License",
    # Update the following list as the project matures
    "Development Status :: 4 - Beta",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Framework :: AsyncIO",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 2",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Internet :: WWW/HTTP :: Session",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet",
    "Typing :: Typed",
]

dependencies = [
    "pydantic >=2.0.0",
    "httpx >=0.28.0",
]

dynamic = ["version"]

[tool.hatch.metadata]
allow-direct-references = true

[dependency-groups]
test = [
    "pytest>=8.3.2",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.0.0",
    "pytest-pretty>=1.3.0",
    "coverage[toml]>=7.8.2",
]

lint = [
    "pre-commit>=4.1.0",
    "mypy>=1.16.0",
    "black>=24.1.0",
    "pyupgrade",
    "ruff>=0.7.4",
]

extra = [
    { include-group = "test" },
    { include-group = "lint" },
]

[project.urls]
Homepage = "https://github.com/yezz123/llmgateway"
Documentation = "https://docs.llmgateway.io/"
Funding = 'https://github.com/sponsors/yezz123'
Source = 'https://github.com/yezz123/llmgateway'

[tool.hatch.version]
path = "llmgateway/__init__.py"

[tool.hatch.build.targets.sdist]
# limit which files are included in the sdist (.tar.gz) asset,
# to exclude unnecessary files and directories from the distribution
include = [
    '/README.md',
    '/scripts',
    '/llmgateway',
    '/tests',
]

[tool.ruff]
line-length = 120
target-version = 'py39'

[tool.ruff.lint]
mccabe = { max-complexity = 14 }
pydocstyle = { convention = 'google' }
select = [
    'F',      # Pyflakes
    'E',      # pycodestyle (Error)
    'I',      # isort
    'D',      # pydocstyle
    'UP',     # pyupgrade
    'YTT',    # flake8-2020
    'B',      # flake8-bugbear
    'T10',    # flake8-debugger
    'T20',    # flake8-print
    'C4',     # flake8-comprehensions
]
ignore = [
    "E501",  # line too long, handled by black
    "B018",  # Found useless expression.
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-third-party = ["pydantic"]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.coverage.run]
source = ["llmgateway"]
branch = true
context = '${CONTEXT}'

[tool.coverage.paths]
source = [
    'llmgateway/',
    '/Users/runner/work/llmgateway/llmgateway/llmgateway/',
    'D:\a\llmgateway\llmgateway\llmgateway',
]

[tool.coverage.report]
precision = 2
fail_under = 90
exclude_lines = [
    'pragma: no cover',
    'raise NotImplementedError',
    'if TYPE_CHECKING:',
    '@overload',
    'if CASUAL_UT',
]

[tool.mypy]
strict = true
warn_return_any = false
no_implicit_optional = false

[tool.pytest.ini_options]
testpaths = 'tests'
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format= "%Y-%m-%d %H:%M:%S"
asyncio_mode= "auto"
filterwarnings = [
    'error',
    'ignore::DeprecationWarning',
]

[tool.codespell]
skip = '.git,env*,__pycache__,.venv'
ignore-words-list = 'ines,ser'
